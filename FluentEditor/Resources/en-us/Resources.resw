<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDescription" xml:space="preserve">
    <value>A tool that helps demonstrate the flexibility of the Fluent Design System as well as supports the app development process by generating XAML markup for our ResourceDictionary framework used in Universal Windows Platform (UWP) applications</value>
  </data>
  <data name="AppDisplayName" xml:space="preserve">
    <value>Fluent XAML Theme Editor</value>
  </data>
  <data name="ColorFlyoutMappingDescription" xml:space="preserve">
    <value>Maps to {0}</value>
  </data>
  <data name="ControlPaletteBaseBlock.Text" xml:space="preserve">
    <value>Base</value>
  </data>
  <data name="ControlPaletteDarkTestContent.Title" xml:space="preserve">
    <value>Dark theme</value>
  </data>
  <data name="ControlPaletteDarkThemeBlock.Text" xml:space="preserve">
    <value>Dark theme</value>
  </data>
  <data name="ControlPaletteDataPath" xml:space="preserve">
    <value>ms-appx:///Resources/en-us/controlPaletteData.json</value>
  </data>
  <data name="ControlPaletteErrorOkButtonCaption" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="ControlPaletteExportButton.Content" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="ControlPaletteInspectorHeader.Text" xml:space="preserve">
    <value>Color dictionary</value>
  </data>
  <data name="ControlPaletteLightTestContent.Title" xml:space="preserve">
    <value>Light theme</value>
  </data>
  <data name="ControlPaletteLightThemeBlock.Text" xml:space="preserve">
    <value>Light theme</value>
  </data>
  <data name="ControlPaletteLoadButton.Content" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="ControlPaletteLoadError" xml:space="preserve">
    <value>Unable to load file {0}</value>
  </data>
  <data name="ControlPaletteLoadErrorTitle" xml:space="preserve">
    <value>Unable to load</value>
  </data>
  <data name="ControlPalettePresetCombo.Header" xml:space="preserve">
    <value>Presets</value>
  </data>
  <data name="ControlPalettePresetCombo.PlaceholderText" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="ControlPalettePrimaryBlock.Text" xml:space="preserve">
    <value>Primary</value>
  </data>
  <data name="ControlPaletteRegionBlock.Text" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="ControlPaletteResetButton.Content" xml:space="preserve">
    <value>Reset colors</value>
  </data>
  <data name="ControlPaletteSaveButton.Content" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ControlPaletteSaveError" xml:space="preserve">
    <value>Unable to save file {0}</value>
  </data>
  <data name="ControlPaletteSaveErrorTitle" xml:space="preserve">
    <value>Unable to save</value>
  </data>
  <data name="DarkThemeTextContrastTitle" xml:space="preserve">
    <value>White Text</value>
  </data>
  <data name="ExportCopyButton.Content" xml:space="preserve">
    <value>Copy to Clipboard</value>
  </data>
  <data name="ExportLearnMoreButton.Content" xml:space="preserve">
    <value>Learn more about XAML ResourceDictionary</value>
  </data>
  <data name="ExportLearnMoreButton.NavigateUri" xml:space="preserve">
    <value>https://docs.microsoft.com/en-us/windows/uwp/design/controls-and-patterns/resourcedictionary-and-xaml-resource-references</value>
  </data>
  <data name="LightThemeTextContrastTitle" xml:space="preserve">
    <value>Black Text</value>
  </data>
  <data name="MainDataPath" xml:space="preserve">
    <value>ms-appx:///Resources/en-us/demodata.json</value>
  </data>
  <data name="TestContentAppBarButton.Content" xml:space="preserve">
    <value>Yolo</value>
  </data>
  <data name="TestContentButtonsBlock.Text" xml:space="preserve">
    <value>Buttons</value>
  </data>
  <data name="TestContentCalendarViewBlock.Text" xml:space="preserve">
    <value>Calendar view</value>
  </data>
  <data name="TestContentCheckboxBlock.Text" xml:space="preserve">
    <value>Checkbox</value>
  </data>
  <data name="TestContentCheckedCheckbox.Content" xml:space="preserve">
    <value>Checked</value>
  </data>
  <data name="TestContentCheckedRadio.Content" xml:space="preserve">
    <value>Checked</value>
  </data>
  <data name="TestContentComboBlock.Text" xml:space="preserve">
    <value>Combo box</value>
  </data>
  <data name="TestContentComboItem1.Content" xml:space="preserve">
    <value>Item 1</value>
  </data>
  <data name="TestContentComboItem2.Content" xml:space="preserve">
    <value>Item 2</value>
  </data>
  <data name="TestContentComboItem3.Content" xml:space="preserve">
    <value>Item 3</value>
  </data>
  <data name="TestContentCommandBarBlock.Text" xml:space="preserve">
    <value>Command bar</value>
  </data>
  <data name="TestContentDatePickerBlock.Text" xml:space="preserve">
    <value>Date picker</value>
  </data>
  <data name="TestContentDisabledAccentButton.Content" xml:space="preserve">
    <value>Disabled accent button</value>
  </data>
  <data name="TestContentDisabledButton.Content" xml:space="preserve">
    <value>Disabled button</value>
  </data>
  <data name="TestContentDisabledCheckbox.Content" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="TestContentDisabledHyperlinkButton.Content" xml:space="preserve">
    <value>Disabled hyperlink button</value>
  </data>
  <data name="TestContentDisabledRadio.Content" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="TestContentEditableComboItem1.Content" xml:space="preserve">
    <value>Editable item 1</value>
  </data>
  <data name="TestContentEditableComboItem2.Content" xml:space="preserve">
    <value>Editable item 2</value>
  </data>
  <data name="TestContentEditableComboItem3.Content" xml:space="preserve">
    <value>Editable item 3</value>
  </data>
  <data name="TestContentEnabledAccentButton.Content" xml:space="preserve">
    <value>Enabled accent button</value>
  </data>
  <data name="TestContentEnabledButton.Content" xml:space="preserve">
    <value>Enabled button</value>
  </data>
  <data name="TestContentHyperlinkButton.Content" xml:space="preserve">
    <value>Hyperlink button</value>
  </data>
  <data name="TestContentHyperLinksBlock.Text" xml:space="preserve">
    <value>Hyperlinks</value>
  </data>
  <data name="TestContentListviewBlock.Text" xml:space="preserve">
    <value>List view</value>
  </data>
  <data name="TestContentListviewItem1.Content" xml:space="preserve">
    <value>Howdy! (disabled)</value>
  </data>
  <data name="TestContentListviewItem2.Content" xml:space="preserve">
    <value>Aloha! (selected)</value>
  </data>
  <data name="TestContentListviewItem3.Content" xml:space="preserve">
    <value>Hello!</value>
  </data>
  <data name="TestContentListviewItem4.Content" xml:space="preserve">
    <value>Hola!</value>
  </data>
  <data name="TestContentRadioBlock.Text" xml:space="preserve">
    <value>Radio button</value>
  </data>
  <data name="TestContentSliderBlock.Text" xml:space="preserve">
    <value>Slider</value>
  </data>
  <data name="TestContentTextbox.PlaceholderText" xml:space="preserve">
    <value>Enter text here</value>
  </data>
  <data name="TestContentTextboxBlock.Text" xml:space="preserve">
    <value>Textbox</value>
  </data>
  <data name="TestContentThirdStateCheckbox.Content" xml:space="preserve">
    <value>Third state</value>
  </data>
  <data name="TestContentTimePickerBlock.Text" xml:space="preserve">
    <value>Time picker</value>
  </data>
  <data name="TestContentToggleBlock.Text" xml:space="preserve">
    <value>Toggle switch</value>
  </data>
  <data name="TestContentToggleButton.Content" xml:space="preserve">
    <value>Toggle button</value>
  </data>
  <data name="TestContentToggledButton.Content" xml:space="preserve">
    <value>Toggled button</value>
  </data>
  <data name="TestContentUncheckedCheckbox.Content" xml:space="preserve">
    <value>Unchecked</value>
  </data>
  <data name="TestContentUncheckedRadio.Content" xml:space="preserve">
    <value>Unchecked</value>
  </data>
  <data name="ThemePaletteDataPath" xml:space="preserve">
    <value>ms-appx:///Resources/en-us/themePaletteData.json</value>
  </data>
  <data name="TestContentDisabledTextBlockButton.Content" xml:space="preserve">
    <value>Disabled text block button</value>
  </data>
  <data name="TestContentEnabledTextBlockButton.Content" xml:space="preserve">
    <value>Enabled text block button</value>
  </data>
  <data name="TestContentAccentContrastTextBlock.Text" xml:space="preserve">
    <value>Accent contrast text</value>
  </data>
  <data name="TestContentAccentTextBlock.Text" xml:space="preserve">
    <value>Accent text</value>
  </data>
  <data name="TestContentActiveTextBlock.Text" xml:space="preserve">
    <value>Active text</value>
  </data>
  <data name="TestContentLowTextBlock.Text" xml:space="preserve">
    <value>Low text</value>
  </data>
  <data name="TestContentMediumTextBlock.Text" xml:space="preserve">
    <value>Medium text</value>
  </data>
  <data name="TestContentBaseTextBlock.Text" xml:space="preserve">
    <value>Common Text</value>
  </data>
  <data name="ThemePaletteControlsAndTextColorsBlock.Header" xml:space="preserve">
    <value>Control &amp; Text colors</value>
  </data>
  <data name="ThemePaletteHyperlinkBlock.Header" xml:space="preserve">
    <value>Hyperlink colors</value>
  </data>
  <data name="AcrylicOpacitySlider.Header" xml:space="preserve">
    <value>Acrylic Opacity</value>
  </data>
  <data name="ThemePalettePrimaryBlock.Header" xml:space="preserve">
    <value>Accent colors</value>
  </data>
  <data name="ThemePaletteRegionBlock.Header" xml:space="preserve">
    <value>Background colors</value>
  </data>
  <data name="TestContentDisabledRevealButton.Content" xml:space="preserve">
    <value>Disabled reveal button</value>
  </data>
  <data name="TestContentEnabledRevealButton.Content" xml:space="preserve">
    <value>Enabled reveal button</value>
  </data>
  <data name="TestContentAppBarToggleButton.Label" xml:space="preserve">
    <value>Toggle button</value>
  </data>
  <data name="TestContentDisableAppBarButton.Label" xml:space="preserve">
    <value>Disabled app button</value>
  </data>
  <data name="TestContentDisableAppBarToggleButton.Label" xml:space="preserve">
    <value>Disabled toggle button</value>
  </data>
  <data name="TestContentEnabledAppBarButton.Label" xml:space="preserve">
    <value>Enabled app button</value>
  </data>
  <data name="TestContentAccentDark3TextBlock.Text" xml:space="preserve">
    <value>Accent dark 3 text</value>
  </data>
  <data name="TestContentAccentLight3TextBlock.Text" xml:space="preserve">
    <value>Accent light 3 text</value>
  </data>
  <data name="TestContentBackgroundBlock.Text" xml:space="preserve">
    <value>Backgrounds</value>
  </data>
  <data name="TestContentTextBlock.Text" xml:space="preserve">
    <value>Text block</value>
  </data>
</root>